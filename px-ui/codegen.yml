overwrite: true
schema: "../src/main/resources/schema/schema.graphqls"
documents: "src/gql/*.graphql"
generates:
  src/gql/generated.ts:
    plugins:
      - typescript
      - add:
          content:
            - "import { ReadStream } from 'fs';"
            - "interface GraphQLFileUpload {"
            - "  filename: string;"
            - "  mimetype: string;"
            - "  encoding: string;"
            - "  createReadStream( options?:{ encoding?: string, highWaterMark?: number } ): ReadStream;"
            - "}"
      - typescript-operations
      - typescript-react-query
      - typescript-validation-schema
    config:
      fetcher: graphql-request
      addInfiniteQuery: true
      exposeDocument: true
      exposeQueryKeys: true
      exposeMutationKeys: true
      exposeFetcher: true
      strictScalars: true
      scalars:
        Date: Date
        DateTime: Date
        Url: String
        Long: number
        Upload: Promise<GraphQLFileUpload>
      scalarSchemas:
        Date: z.date()
        Email: z.string().email()
        Url: z.string().url()
        Long: z.number()
      schema: zod
      # notAllowEmptyString: true
      directives:
        constraint:
          minLength: min
          maxLength:
            ["max", "$1", "Field must not be longer than $1 characters"]
hooks:
  { afterAllFileWrite: ['sed -i -e"s|.*graphql-request/dist/types.dom.*||g"'] }
